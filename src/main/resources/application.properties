# MySQL Database
spring.datasource.url= ${DATASOURCE_URL}
spring.datasource.username= ${DATASOURCE_USERNAME}
spring.datasource.password= ${DATASOURCE_PASSWORD}
spring.jpa.hibernate.ddl-auto=update
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#Kafka Consumer
spring.kafka.consumer.bootstrap-servers= ${KAFKA_CONSUMER_BOOTSTRAP_SERVERS}
spring.kafka.consumer.group-id= ${KAFKA_CONSUMER_GROUP_ID}

#Kafka Producer
spring.kafka.producer.bootstrap-servers= ${KAFKA_PRODUCER_BOOTSTRAP_SERVERS}

#Kafka Topic
spring.kafka.topic = ${KAFKA_TOPIC_SMS}

# Redis
spring.data.redis.host= ${SPRING_DATA_REDIS_HOST}
spring.data.redis.port= ${SPRING_DATA_REDIS_PORT}
spring.data.redis.password=${SPRING_DATA_REDIS_PASSWORD}

# Key Based Authentication API Key and Secret
notification.service.authentication.auth.token.header.name = ${NOTIFI_SERVICE_AUTH_TOKEN_HEADER_NAME}
notification.service.authentication.auth.token = ${NOTIFI_SERVICE_AUTH_TOKEN}

# Bean Overriding
spring.main.allow-bean-definition-overriding=true

#ElasticSearch
spring.data.elasticsearch.cluster-names= ${SPRING_DATA_ELASTICSEARCH_CLUSTER_NAMES}
spring.data.elasticsearch.cluster-node= ${SPRING_DATA_ELASTICSEARCH_CLUSTER_NODE}
spring.data.elasticsearch.repositories.enabled=true

# SMS Third-Party API configuration
notification.service.sms-api-url = ${NOTIFICATION_SERVICE_SMS_API_URL}
notification.service.sms-thirdParty-api-key = ${NOTIFICATION_SERVICE_SMS_THIRD_PARTY_API_KEY}



#spring.elasticsearch.index-name=sms_index
#spring.data.elasticsearch.auto-index-creation=true